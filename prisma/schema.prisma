generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model map {
  mapid                 Int         @id @default(autoincrement())
  mapdifficulty         Int?
  mapisquiz             Boolean?    @default(false)
  mapquizid             Int?
  mapendlocationx       Int?
  mapendlocationy       Int?
  mapstartlocationx     Int?
  mapstartlocationy     Int?
  mapjson               String?
  maptutorialid         Int?
  quiz                  quiz?       @relation(fields: [mapquizid], references: [quizid], onDelete: NoAction, onUpdate: NoAction)
  tutorial              tutorial?   @relation(fields: [maptutorialid], references: [tutorialid], onDelete: NoAction, onUpdate: NoAction)
  userscore             userscore[]
}

model quiz {
  quizid            Int     @id @default(autoincrement())
  quizquestion      String? 
  map               map[]
}

model tutorial {
  tutorialid          Int     @id @default(autoincrement())
  tutorialdescription String?
  tutorialhint        String? 
  map                 map[]
}

model users {
  usersid         Int         @id @default(autoincrement())
  usersname       String      @db.VarChar(255) @unique
  usersemail      String      @db.VarChar(255) @unique
  userspassword   String      @db.VarChar(255)
  userstotalscore Int?
  userslevel      Int?
  usersimage      String      @db.VarChar(255)
  userscore       userscore[]
}

model userscore {
  userscoreid      Int    @id @default(autoincrement())
  userscoreusersid Int?
  userscoremapid   Int?
  userscorescore   Int?
  map              map?   @relation(fields: [userscoremapid], references: [mapid], onDelete: NoAction, onUpdate: NoAction)
  users            users? @relation(fields: [userscoreusersid], references: [usersid], onDelete: NoAction, onUpdate: NoAction)
}
